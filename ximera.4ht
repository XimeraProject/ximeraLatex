%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ximera.4ht
% Copyright (C) 2014
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3c of this license or (at your option) any
% later version. The latest version of this license is
% in
%   http://www.latex-project.org/lppl.txt
% and version 1.3c or later is part of all distributions
% of LaTeX version 2005/12/01 or later.
%
% This Current Maintainer of this work
% is Jim Fowler.
%
% If you modify this program your changing its signature
% with a directive of the following form will be
% appreciated.
%            \message{signature}
%
% fowler@math.osu.edu
% http://kisonecat.com/
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\immediate\write-1{version 2014-01-26-09:44}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% disable ligatures in HTML
\usepackage{microtype}
\DisableLigatures{encoding = *, family = * }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% pgf sometimes causes trouble, but we simply don't care in tex4ht mode
\newcommand{\pgfsyspdfmark}[3]{}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Use an "identification" counter to assign IDs to the various problem-related DOM elements
\newcounter{identification}
\setcounter{identification}{0}

\newcommand{\ConfigureQuestionEnv}[2]{%
% refstepcounter ensures that labels get updated within these environments
\renewenvironment{#1}{\refstepcounter{problem}}{}%
\ConfigureEnv{#1}{\stepcounter{identification}\ifvmode \IgnorePar\fi \EndP\HCode{<div class="problem-environment #2" id="problem\arabic{identification}">}}{\HCode{</div>}\IgnoreIndent}{}{}%
}

\ConfigureQuestionEnv{problem}{problem}
\ConfigureQuestionEnv{exercise}{exercise}
\ConfigureQuestionEnv{question}{question}
\ConfigureQuestionEnv{exploration}{exploration}
\ConfigureQuestionEnv{xarmaBoost}{xarma-boost}
\ConfigureQuestionEnv{hint}{hint}

\renewenvironment{freeResponse}{\refstepcounter{problem}}{}%
\ConfigureEnv{freeResponse}{\stepcounter{identification}\ifvmode \IgnorePar\fi \EndP\HCode{<div class="free-response" id="problem\arabic{identification}">}}{\HCode{</div>}\IgnoreIndent}{}{}%

\ConfigureQuestionEnv{shuffle}{shuffle}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% respondables

\renewcommand{\answer}[2][false]{\HCode{<span class="answer respondable">}#2\HCode{</span>}}
\renewcommand{\graph}[2][]{\HCode{<div class="graph" data-options="#1">}#2\HCode{</div>}}

%% correct answers for multiple choice
%\newboolean{correct}
%\setboolean{correct}{true}
\newcounter{choiceId}
\renewcommand{\choice}[2][]{\stepcounter{choiceId}\ifvmode \IgnorePar\fi \EndP% 
\ifthenelse{\boolean{#1}}{\HCode{<span class="choice correct" id="choice\arabic{choiceId}">}}
{\HCode{<span class="choice" id="choice\arabic{choiceId}">}}#2\HCode{</span>}}

% You might expect a \setcounter{choiceId}{0} here --- that would be
% wrong, because then the generated IDs would no longer be unique.
%
% You might also expect these to be "problem environments" but they aren't -- they're respondables
\renewenvironment{multipleChoice}{\refstepcounter{problem}}{}%
\ConfigureEnv{multipleChoice}{\stepcounter{identification}\ifvmode \IgnorePar\fi \EndP\HCode{<div class="multiple-choice" id="problem\arabic{identification}">}}{\HCode{</div>}\IgnoreIndent}{}{}

% This is actually just word choice
\renewenvironment{multipleChoice*}{\refstepcounter{problem}}{}%
\ConfigureEnv{multipleChoice*}{\stepcounter{identification}\ifvmode \IgnorePar\fi \EndP\HCode{<span class="word-choice" id="word-choice\arabic{identification}">}}{\HCode{</span>}\IgnoreIndent}{}{}

\renewenvironment{selectAll}{\refstepcounter{problem}}{}%
\ConfigureEnv{selectAll}{\stepcounter{identification}\ifvmode \IgnorePar\fi \EndP\HCode{<div class="select-all" id="problem\arabic{identification}">}}{\HCode{</div>}\IgnoreIndent}{}{}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% refstepcounter ensures that labels get updated within these environments
%\makeatletter

\newcommand{\ConfigureTheoremEnv}[1]{%
\renewenvironment{#1}[1][]{\refstepcounter{problem}%
\ifthenelse{\equal{##1}{}}{}{%
  \HCode{<span class="theorem-like-title">}##1\HCode{</span>}%
}}{}
\ConfigureEnv{#1}{\stepcounter{identification}\ifvmode \IgnorePar\fi \EndP\HCode{<div class="theorem-like problem-environment #1" id="problem\arabic{identification}">}}{\HCode{</div>}\IgnoreIndent}{}{}%
}

%\makeatother

\ConfigureTheoremEnv{theorem}
\ConfigureTheoremEnv{acknowledgement}
\ConfigureTheoremEnv{algorithm}
\ConfigureTheoremEnv{axiom}
\ConfigureTheoremEnv{claim}
\ConfigureTheoremEnv{conclusion}
\ConfigureTheoremEnv{condition}
\ConfigureTheoremEnv{conjecture}
\ConfigureTheoremEnv{corollary}
\ConfigureTheoremEnv{criterion}
\ConfigureTheoremEnv{definition}
\ConfigureTheoremEnv{example}
\ConfigureTheoremEnv{explanation}
\ConfigureTheoremEnv{lemma}
\ConfigureTheoremEnv{notation}
\ConfigureTheoremEnv{proposition}
\ConfigureTheoremEnv{remark}
\ConfigureTheoremEnv{summary}
\ConfigureTheoremEnv{paradox}
\ConfigureTheoremEnv{warning}
\ConfigureTheoremEnv{observation}
\ConfigureTheoremEnv{template}
\ConfigureTheoremEnv{idea}
\ConfigureTheoremEnv{fact}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Feedback environments take an optional parameter (which describes
% when the feedback is to be provided)

\renewenvironment{feedback}[1][attempt]{\stepcounter{identification}\ifvmode \IgnorePar\fi \EndP\HCode{<div class="feedback" data-feedback="#1" id="feedback\arabic{identification}">}}{\HCode{</div>}\IgnoreIndent}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Eliminate some formatting that we'll handle later with CSS

\renewcommand{\maketitle}{}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% dialogue environment

\renewenvironment{dialogue}{\begin{description}}{\end{description}}

\ConfigureList{dialogue}%
   {\EndP\HCode{<dl \a:LRdir class="dialogue">}%
      \PushMacro\end:itm
\global\let\end:itm=\empty}
   {\PopMacro\end:itm \global\let\end:itm \end:itm
\EndP\HCode{</dd></dl>}\ShowPar}
   {\end:itm \global\def\end:itm{\EndP\Tg</dd>}\HCode{<dt
        class="actor">}\bgroup \bf}
   {\egroup\EndP\HCode{</dt><dd\Hnewline class="speech">}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% foldable elements -- these could be HTML5 details and summary.

\renewenvironment{foldable}{\stepcounter{identification}\ifvmode \IgnorePar\fi \EndP\HCode{<div id="foldable\arabic{identification}" class="foldable">}}{\HCode{</div>}\IgnoreIndent}

\renewenvironment{expandable}{\stepcounter{identification}\ifvmode \IgnorePar\fi \EndP\HCode{<div data-original="expandable" id="foldable\arabic{identification}" class="foldable">}}{\HCode{</div>}\IgnoreIndent}


\renewcommand{\unfoldable}[1]{\HCode{<span class="unfoldable">}#1\HCode{</span>}}



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% video environments

% Youtube command. Requires id.
\renewcommand{\youtube}[1]{\ifvmode \IgnorePar\fi \EndP\HCode{<div class="video youtube-player" data-youtube="#1">_</div>}}

% Kaltura is an online video platform
% \kaltura{partnerid}{entryid}
\renewcommand{\kaltura}[2]{\ifvmode \IgnorePar\fi \EndP\HCode{<script src="http://cdnapi.kaltura.com/p/#1/sp/#100/embedIframeJs/uiconf_id/29761752/partner_id/#1/entry_id/#2/playerId/#1?autoembed=true&width=480&height=270> </script>}}
    

% Image environment doesn't actually work in tex4ht as defined with
% NewEnviron; so this renewenvironment is needed.  image-environment
% also gets formatted in a well, and when the user clicks on the
% image, it zooms in.
\renewenvironment{image}[1][]{\ifvmode \IgnorePar\fi \EndP\HCode{<div class="image-environment">}}{\HCode{</div>}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\renewenvironment{sageCell}{\NoFonts}{\EndNoFonts}
\ScriptEnv{sageCell}{\ifvmode \IgnorePar\fi \EndP\HCode{<div class="sage"><script type="text/x-sage">}}{\HCode{\Hnewline</script></div>}}

\renewenvironment{leash}[1]{\ifvmode \IgnorePar\fi \EndP\HCode{<div style="overflow: auto; height: #1px">}}{\HCode{</div>}\IgnoreIndent}

\renewenvironment{sageOutput}{\NoFonts}{\EndNoFonts}
\ScriptEnv{sageOutput}{\ifvmode \IgnorePar\fi \EndP\HCode{<div class="sageOutput"><script type="text/x-sage">}}{\HCode{\Hnewline</script></div>}}

\renewcommand{\xkcd}[1]{\ifvmode \IgnorePar\fi \EndP\HCode{<img src="https://imgs.xkcd.com/comics/#1.png">}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% interactives

% Geogebra command. Requires id, width, and height as arguments.
%defining keys for answer geogebra key=value pairs
\define@key{geogebra}{rc}[true]{\def\geo@rc{#1}}
\define@key{geogebra}{sdz}[true]{\def\geo@sdz{#1}}
\define@key{geogebra}{smb}[true]{\def\geo@smb{#1}}
\define@key{geogebra}{stb}[true]{\def\geo@stb{#1}}
\define@key{geogebra}{stbh}[true]{\def\geo@stbh{#1}}
\define@key{geogebra}{ld}[true]{\def\geo@ld{#1}}
\define@key{geogebra}{sri}[true]{\def\geo@sri{#1}}
%set default key values
\setkeys{geogebra}{rc=false,sdz=false,smb=false,stb=false,stbh=false,ld=false,sri=false}
%command definition
\renewcommand{\geogebra}[4][]{%
  \setkeys{geogebra}{#1}% Set new keys
  \HCode{<iframe scrolling="no" src="https://tube.geogebra.org/material/iframe/id/#2/width/#3/height/#4/border/888888/rc/\geo@rc/ai/false/sdz/\geo@sdz/smb/\geo@smb/stb/\geo@stb/stbh/\geo@stbh/ld/\geo@ld/sri/\geo@sri/at/auto" width="#3px" height="#4px" style="border:0px;"> </iframe>}}


% Desmos command. Requires id, width, and height as arguments.
\renewcommand{\desmos}[3]{\HCode{<a title="View with the Desmos Graphing Calculator" href="https://www.desmos.com/calculator/#1" target="_blank">  <img src="https://s3.amazonaws.com/calc_thumbs/production/#1.png"" width="#2px" height="#3px" style="border:1px solid \#ccc; border-radius:5px"/></a>}}


% googleSheet command. Requires id, width, and height as arguments.
%  optional arguments are gid for sheet ID and range for cell range.
%command definition
\renewcommand{\googleSheet}[5]{%
  \ifthenelse{\equal{#4}{}}%
    {\HCode{<iframe width="#2px" height="#3px" src="https://docs.google.com/spreadsheets/d/#1/htmlembed?widget=true">This browser does not support embedded elements.</iframe>}}%
    {\ifthenelse{\equal{#5}{}}%
       {\HCode{<iframe width="#2px" height="#3px" src="https://docs.google.com/spreadsheets/d/#1/htmlembed?single=true&amp;gid=#4&amp;widget=false">This browser does not support embedded elements.</iframe>}}%
       {\HCode{<iframe width="#2px" height="#3px" src="https://docs.google.com/spreadsheets/d/#1/htmlembed?single=true&amp;gid=#4&amp;range=#5&amp;widget=false">This browser does not support embedded elements.</iframe>}}%
    }%
}%


% HTML environment.
%\renewcommand{\html}[1]{\HCode{#1}}
\RenewEnviron{html}{\HCode{\BODY}}

\renewcommand*{\link}[2][]{%
\ifthenelse{\equal{#1}{}}%
{\HCode{<a href="#2">}LINK\HCode{</a>}}
{\HCode{<a href="#2">}#1\HCode{</a>}}}

% This connects back to ximera.cls code which makes lim into display math
% \newcommand{\prelim}{\lim}

% Interactive element
\renewcommand{\includeinteractive}[1]{\stepcounter{identification}\ifvmode \IgnorePar\fi \EndP\HCode{<div id="interactive\arabic{identification}" class="interactive"> </div>}\HCode{<script src="#1" data-target="interactive\arabic{identification}"> </script>}\IgnoreIndent}

\Hinput{ximera}
\endinput
