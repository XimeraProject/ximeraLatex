\ProvidesPackage{customLoops}
\RequirePackage{xparse}
\ExplSyntaxOn


%   \bool_do_while:Nn <<boolean>> {<<code>>}
%       Places the <<code>> in the input stream for TEX to process, and then checks the logical
%       value of the <<boolean>>. If it is true then the <<code>> is inserted into the input stream again
%       and the process loops until the <<boolean>> is false.


%    \cs_new:Npn << function >>   << parameters >>   { <<hcode>> }
%        Creates << function >> to expand to << code >> as replacement text. Within the << code >>, the
%        << parameters >> (#1, #2, etc.) will be replaced by those absorbed by the function. The
%        definition is global and an error results if the << function >> is already defined.

\tl_new:N \g_xWhile_int_tl


\NewDocumentCommand{\xWhileInt}{m m}{%
    %   Syntax: \xWhile{ Condition }{ Code }
    %   Condition should be a boolean value truth statement, eg 1 == 1.
    %   Code will be executed for as long as the "Condition" is satisfied.
    %   Note; the code is NOT executed before the "Condition" is checked.
    
    
    \tl_set:Nx \g_while_int_tl {#1}%            First we fully expand the logical condition provided by user, 
    %                                               so we don't need to worry about counter shells.
    
    \int_while_do:nn {%                         Now perform the while loop.
            \g_while_int_tl%                    Test if the first condition is met
        }{%                                     If so, execute the code.
            #2%
            \tl_set:Nx \g_while_int_tl {#1}%    Retest the while condition 
        }%                                          (in case the executed code changes the result).
    }%
    
\NewDocumentCommand{\xFor}{m O{0} m O{1} m}{%
    %   Syntax: \xFor{ Counter }[ OptionalStart ]{ EndValue }[ OptionalStepValue ]{ Code }
    %   { Counter } is the name of the counter that will be used as the iteration "variable".
    %       If the counter doesn't exist, the command will create it.
    %   [ Optional Start ] is the starting point of the iterating variable, default is zero.
    %   { EndValue } is the value that the for loop will go until (but not including).
    %   [ OptionalStepValue ] Is the optional value that will determine how much the counter 
    %       increases on each loop. The default is one.
    %   { Code } is the code that will be executred on each loop.
    
    \MakeCounter{#1}%               Make the counter if it doesn't exist.
    \setcounter{#1}{#2}%            Set counter to the optional starting value.
    \xWhileInt{\arabic{#1} < #3}{%  Use While command above to run everything.
        #5%                         Execute provided code.
        \addtocounter{#1}{#4}%      Iterate by (optional) Step-value
        }%
    
    }%


%\ExplSyntaxOff