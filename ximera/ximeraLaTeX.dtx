% \iffalse meta-comment
% vim: textwidth=75
%<*internal>
\iffalse
%</internal>
%<*readme>
|
------------:| ------------------------------------------------------------
 ximeraLaTeX:| LaTeX classes for simultaneously writing print and online interactive materials.
      Author:| Bart Snapp
      E-mail:| bart.snapp@gmail.com
     License:| Released under the LaTeX Project Public License v1.3c or later
         See:| http://www.latex-project.org/lppl.txt


Short description:
Some text about the class: probably the same as the abstract.
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
------------:| ------------------------------------------------------------
 ximeraLaTeX:| LaTeX classes for simultaneously writing print and online interactive materials.
      Author:| Bart Snapp
      E-mail:| bart.snapp@gmail.com
     License:| Released under the LaTeX Project Public License v1.3c or later
         See:| http://www.latex-project.org/lppl.txt

\endpreamble
\postamble

Copyright (C) 2017 by Bart Snapp <bart.snapp@gmail.com> and Jim Fowler <kisonecat@gmail.com>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Bart Snapp. The source code can be found at:

https://github.com/XimeraProject/ximeraLatex

This work consists of the file ximera.dtx and a Makefile.
Running "make" generates the derived files README, ximeraLaTeX.pdf, ximera.cls, xourse.cls.
Running "make inst" installs the files in the user's TeX tree.
Running "make install" installs the files in the local TeX tree.

\endpostamble

\usedir{tex/latex/ximeraLaTeX}
\input docstrip
\askforoverwritefalse
\generate{
  \file{ximera.cls}{\from{ximeraLaTeX.dtx}{classXimera}}
  \file{xourse.cls}{\from{ximeraLaTeX.dtx}{classXourse}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/ximeraLaTeX}
\generate{
  \file{ximeraLaTeX.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/ximeraLaTeX}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{ximeraLaTeX.dtx}
%</driver>
%<classXimera|classXourse>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<classXimera>\ProvidesClass{ximera}
%<classXourse>\ProvidesClass{xourse}
%<classXimera|classXourse> [2017/10/17 v1.00
%<classXimera> A LaTeX class for simultaneously writing print and online interactive materials.]
%<classXourse> A LaTeX class for combining Ximera activities.]
%<*driver>
\documentclass{ltxdoc}
\usepackage[a4paper,margin=25mm,left=50mm,nohead]{geometry}
\usepackage[numbered]{hypdoc}
\usepackage{hyperref}

\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{\jobname.dtx}
% \DoNotIndex{\newcommand,\newenvironment}
% 
%\title{\textsf{ximera\LaTeX} --- \LaTeX\ classes for simultaneously writing print and online interactive materials.\thanks{This file
%   describes version \fileversion, last revised \filedate.}
%}
%\author{Bart Snapp\thanks{E-mail: bart.snapp@gmail.com}}
%\date{Released \filedate}
%
%\maketitle
%
%\changes{v1.00}{2017/10/17}{First public release}
%
% \begin{abstract}
% The \textsf{ximera} class aids in the creation of handouts,
% worksheets, exercises, and sections of textbooks to be used either
% individually or ``glued'' together via a \textsf{xourse} file. All
% \textsf{ximera} documents can be deployed in an online interactive
% form via \texttt{xake} See: \href{https://ximera.osu.edu}{Ximera Project} and the source code on \href{https://github.com/XimeraProject}{GitHub}.
% \end{abstract}
%
% \section{Introduction}
%
%
% \section{ximera.cls}
% \subsection{Options for the class}
%    We start by listing the options for the \textsf{ximera} document class. Note, since the \textsf{xourse} class is based on the \textsf{ximera} class, all listed options are available there too.
%
%    \begin{macrocode}
%<*classXimera>
%    \end{macrocode}
% \begin{macro}{handout}
%    The default behavior of the class is to display \textbf{all} content. This means that if any questions are asked, all answers are shown. Moreover, some content will only have a meaningful presentation when displayed online. When compiled without any options, this content will be shown too. This option will supress such content and generate a reasonable printiable ``handout.''
%
%    \begin{macrocode}
\newif\ifhandout
\handoutfalse
\DeclareOption{handout}{\handouttrue}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{noauthor}
%    By default, authors are listed at the bottom of the first page of a document. This option will supress the listing of the authors.
%    \begin{macrocode}
\newif\ifnoauthor
\noauthorfalse
\DeclareOption{noauthor}{\noauthortrue}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{nooutcomes}
%    By default, learning outcomes are listed at the bottom of the first page of a document. This option will supress the listing of the learning outcomes.
%    \begin{macrocode}
\newif\ifnooutcomes
\nooutcomesfalse
\DeclareOption{nooutcomes}{\nooutcomestrue}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{instructornotes}
%    This option will turn on (and off) notes written for the instructor.
%    \begin{macrocode}
\newif\ifinstructornotes
\instructornotesfalse
\DeclareOption{instructornotes}{\instructornotestrue}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{noinstructornotes}
%    This option will turn off (and on) notes written for the instructor.
%    \begin{macrocode}
\DeclareOption{noinstructornotes}{\instructornotestrue}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{hints}
%    When the \texttt{handout} options is used, hints are not shown. This option will make hints visible in handout mode. 
%    \begin{macrocode}
\newif\ifhints
\hintsfalse
\DeclareOption{hints}{\hintstrue}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{space}
%    This option will place space aster each problem-like environment (\texttt{exercise}, \texttt{question}, \texttt{problem}, and \texttt{exploration}).
%    \begin{macrocode}
\newif\ifspace 
\spacefalse
\DeclareOption{space}{\spacetrue}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{newpage}
%    This option will start each problem-like environment (\texttt{exercise}, \texttt{question}, \texttt{problem}, and \texttt{exploration}) start on a new page.
%    \begin{macrocode}
\newif\ifnewpage
\newpagefalse
\DeclareOption{newpage}{\newpagetrue}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{numbers}
%    This option will number the titles of the activity. By default the activities are unnumbered.
%    \begin{macrocode}
\newif\ifnumbers
\numbersfalse
\DeclareOption{numbers}{\numberstrue}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{wordchoicegiven}
%    This option will replace the choices shown by \texttt{wordChoice} with the correct choice. No indication of the \texttt{wordChoice} environment will be shown.
%    \begin{macrocode}
\newif\ifwordchoicegiven
\wordchoicegivenfalse
\DeclareOption{wordchoicegiven}{\wordchoicegiventrue}
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% tikzexport will generate SVGs and PNGs for tikzpictures
%%
%% This option is an internal option used for deploying to the web
%%
\newif\iftikzexport
\tikzexportfalse
\DeclareOption{tikzexport}{%
  \tikzexporttrue%
  \handoutfalse%
  \shufflefalse%
  \spacefalse%  
  \numbersfalse%
  \newpagefalse%
  \hintsfalse%
  \nooutcomesfalse%
}
\newif\ifxake
\xakefalse
\DeclareOption{xake}{\xaketrue}
%    \end{macrocode}
%    \begin{macrocode}
\DeclareOption*{\PassOptionsToClass{\CurrentOption}{article}}
\ProcessOptions\relax
\LoadClass{article}
%    \end{macrocode}
% \subsection{Loading packages}
%    Quite a few packages are required by the document class. 
%    \begin{macrocode}
\RequirePackage[table]{xcolor}
\RequirePackage{pgfplots}
\pgfplotsset{compat=newest,compat/show suggested version=false}
\usepgfplotslibrary{groupplots}
\usetikzlibrary{calc}
\IfFileExists{sagetex.sty}{\RequirePackage{sagetex}}{}
\RequirePackage[inline]{enumitem}
\RequirePackage[pagestyles]{titlesec} 
\RequirePackage{titletoc} 
\RequirePackage{titling}  
\RequirePackage{url}
\RequirePackage{fancyvrb}
\RequirePackage{environ}
\RequirePackage{amssymb}
\RequirePackage{amsmath}
\RequirePackage{amsthm}
\RequirePackage{xifthen}
\RequirePackage{multido}
\RequirePackage{listings}
\RequirePackage{xkeyval}
\RequirePackage[framemethod=TikZ]{mdframed}
\RequirePackage{comment}
%    \end{macrocode}
% \subsection{Preparation for TeX4ht}
%   Some commands need to be redefined in preparation web deployment.
%    \begin{macrocode}
\ifdefined\HCode
\newcommand{\href}[1]{}
\else
\RequirePackage[pdfpagelabels,colorlinks=true,allcolors=blue!30!black]{hyperref}
\pdfstringdefDisableCommands{\def\hskip{}}%% quiets warning
\fi
%    \end{macrocode}
% \subsection{Exporting graphics}
%    When compiling with \textit{xake}, all Ti\textit{k}Z images are extracted, and rendered separately. The following code makes this happen:
%    \begin{macrocode}
\ifdefined\HCode
\tikzexporttrue
\fi
\iftikzexport
\usetikzlibrary{external}
\ifdefined\HCode
% in htlatex, just include the svg files
\def\pgfsys@imagesuffixlist{.svg}
\tikzexternalize[prefix=./,mode=graphics if exists]
\else
% in pdflatex, actually generate the svg files
\tikzset{
  /tikz/external/system call={
    pdflatex \tikzexternalcheckshellescape -halt-on-error -interaction=batchmode -jobname "\image" "\\PassOptionsToClass{tikzexport}{ximera}\texsource";
    mutool draw -o \image.svg \image.pdf ;
    mutool draw -r 150 -c rgbalpha -o \image.png \image.pdf ;
  }
}
\tikzexternalize[optimize=false,prefix=./]
\fi
\fi
%    \end{macrocode}
%
% \begin{macro}{\dummyMacro}
% This is a dummy macro.  If it did anything, we'd describe its
% implementation here.
%    \begin{macrocode}
\newcommand{\dummyMacro}{}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{dummyEnv}
% This is a dummy environment.  If it did anything, we'd describe its
% implementation here.
%    \begin{macrocode}
\newenvironment{dummyEnv}{%
}{%
%    \end{macrocode}
% \changes{v1.00a}{2017/10/17}{Added a spurious change log entry to
%   show what a change \emph{within} an environment definition looks
%   like.}
% Don't use |%| to introduce a code comment within a |macrocode|
% environment.  Instead, you should typeset all of your comments with
% LaTeX---doing so gives much prettier results.  For comments within a
% macro/environment body, just do an |\end{macrocode}|, include some
% commentary, and do another |\begin{macrocode}|.  It's that simple.
%    \begin{macrocode}
}
%    \end{macrocode}
% \end{environment}
%    \begin{macrocode}
%</classXimera>
%    \end{macrocode}
% \section{xourse.cls}
%
%    \begin{macrocode}
%<*classXourse>
%    \end{macrocode}
% \begin{macro}{notoc}
%    The default behavior of the class is to provide a table of contents listing all activities in the course. This option will supress this table of contents.
%    \begin{macrocode}
\newif\ifnotoc
\notocfalse
\DeclareOption{notoc}{\notoctrue}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{nonewpage}
%    The default behavior of the class is to start each activity on a new page. This option will start activities without making a new page.
%    \begin{macrocode}
\newif\ifnonewpage
\nonewpagefalse
\DeclareOption{nonewpage}{\nonewpagetrue}
%    \end{macrocode}
% \end{macro}
%    \begin{macrocode}
\DeclareOption*{\PassOptionsToClass{\CurrentOption}{ximera}}
\ProcessOptions\relax
\LoadClass{ximera}
%    \end{macrocode}
% \begin{macro}{\dummyMacro2}
% This is a dummy macro.  If it did anything, we'd describe its
% implementation here.
%    \begin{macrocode}
\newcommand{\dummyMacro2}{}
%    \end{macrocode}
% \end{macro}
%
% \begin{environment}{dummyEnv2}
% This is a dummy environment.  If it did anything, we'd describe its
% implementation here.
%    \begin{macrocode}
\newenvironment{dummyEnv2}{%
}{%
%    \end{macrocode}
% \changes{v1.00a}{2017/10/17}{Added a spurious change log entry to
%   show what a change \emph{within} an environment definition looks
%   like.}
% Don't use |%| to introduce a code comment within a |macrocode|
% environment.  Instead, you should typeset all of your comments with
% LaTeX---doing so gives much prettier results.  For comments within a
% macro/environment body, just do an |\end{macrocode}|, include some
% commentary, and do another |\begin{macrocode}|.  It's that simple.
%    \begin{macrocode}
}
%    \end{macrocode}
% \end{environment}
%
%    \begin{macrocode}
%</classXourse>
%    \end{macrocode}
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \section{Usage}
%
% ==== Put descriptive text here. ====
%
% \DescribeMacro{\dummyMacro}
% This macro does nothing.\index{doing nothing|usage} It is merely an
% example.  If this were a real macro, you would put a paragraph here
% describing what the macro is supposed to do, what its mandatory and
% optional arguments are, and so forth.
%
% \DescribeEnv{dummyEnv}
% This environment does nothing.  It is merely an example.
% If this were a real environment, you would put a paragraph here
% describing what the environment is supposed to do, what its
% mandatory and optional arguments are, and so forth.
%    \begin{macrocode}
%<*classXimera|classXourse>
\endinput
%</classXimera|classXourse>
%    \end{macrocode}
%\Finale
