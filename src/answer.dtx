%    \begin{macrocode}
%<*classXimera>
% -------------
% -------------
% Answers
% -------------
% -------------


\ifdefined\HCode
	\newcommand{\recordvariable}[1]{}
\else
	\newwrite\idfile
	\immediate\openout\idfile=\jobname.ids
	\newcommand{\recordvariable}[1]{\ifthenelse{\equal{#1}{}}{}{\immediate\write\idfile{var #1;}}}
\fi

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 	Defining keys for answer command key=value pairs
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\define@key{answer}{given}[true]{\def\ans@given{#1}} % Determines if
	                                             % answer is shown
	                                             % in handout
	                                             % mode.  when
	                                             % given=true,
	                                             % show answer in
	                                             % handout mode,
	                                             % show answer in
	                                             % "given box"
	                                             % outside handout
	                                             % mode
	%% when given=false, do not show answer in handout mode, show answer outside handout mode

\define@key{answer}{tolerance}{\def\ans@tol{#1}}% Used for setting numeric answer tolerance for online student input. 
												 %  Note: currently no affect on pdf output.

\define@key{answer}{validator}{}%			Used to run dynamic js code on student provided answers.
												 %  Note: currently pdf outputs the validator code itself.

\define@key{answer}{id}{\def\ans@id{#1}} %	Used for assigning a js ID to answer for dynamic code (eg validators).
												 %  Note: currently no affect on pdf output.

\define@key{answer}{format}{}%				Used to set anticipated input format; eg "string".
												 %  Note: currently no affect on pdf output.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%			Set default values for answer command key=value pairs
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Default values are:
%
% given = false

\setkeys{answer}{id=,given=false}




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%						Answer command base code.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\newcommand{\answer}[2][]{%
	\ifmmode%
		\setkeys{answer}{#1}%
		\recordvariable{\ans@id}
		\ifthenelse{\boolean{\ans@given}}
			{% Start then statement
			\ifhandout 
				#2
			\else
				\underset{\scriptstyle\mathrm{given}}{\fbox{\ensuremath{#2}}}
			\fi
			}% End then statement
			{% Start else statement
			\ifhandout
				\fbox{\rm{?}}
			\else% show answer in box outside handout mode
				\fbox{\ensuremath{#2}}
			\fi
			}% End else statement
	\else%
		\GenericError{\space\space\space\space}% Throw an error based on... something? -- Jason
		{Attempt to use \@backslashchar answer outside of math mode}
		{See https://github.com/ximeraProject/ximeraLatex for explanation.}
		{Need to use either inline or display math.}%
	\fi
}
             

%</classXimera>
%    \end{macrocode}
