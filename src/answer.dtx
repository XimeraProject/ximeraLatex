% \subsubsection{Answers}
%<*classXimera>
% \DescribeMacro{\answer}{A math answer}
% Determines if answer is shown in handout mode.  when |given=true|,
% show answer in handout mode, show answer in ``given box'' outside
% handout mode.  When |given=false|, do not show answer in handout
% mode, show answer outside handout mode
%    \begin{macrocode}
\define@key{answer}{given}[true]{\def\ans@given{#1}} 
%    \end{macrocode}
% Used for setting numeric answer tolerance for online student input.
%    \begin{macrocode}
\define@key{answer}{tolerance}{\def\ans@tol{#1}}
%    \end{macrocode}
% Used to run dynamic js code on student provided answers. Note:
% currently pdf outputs the validator code itself.
%    \begin{macrocode}
\define@key{answer}{validator}{}
%    \end{macrocode}
% Used for assigning a js ID to answer for dynamic code (eg validators).
%    \begin{macrocode}
\define@key{answer}{id}{\def\ans@id{#1}}
%    \end{macrocode}
% Used to set anticipated input format; eg "string".
%    \begin{macrocode}
\define@key{answer}{format}{}
%    \end{macrocode}
% Set default values for |\answer| command |key=value| pairs.
% Default values are |given = false|.
%    \begin{macrocode}
\setkeys{answer}{id=,given=false}
%    \end{macrocode}
% Basic code for |\answer|.
%    \begin{macrocode}
\ifweb
\def\answer{%
  \begingroup
  \catcode`^=12\relax
  \catcode`_=12\relax
  \answerbox
}
\newcommand{\answerbox}[2][]{%
  \renewcommand{\sqrt}[1]{\string \sqrt\{##1\}}
  \renewcommand{\frac}[2]{((##1)/(##2))}
  \renewcommand{\log}{\string\log}
  \renewcommand{\ln}{\string\ln}
  \renewcommand{\sin}{\string\sin}
  \renewcommand{\cos}{\string\cos}
  \renewcommand{\tan}{\string\tan}
  \renewcommand{\arcsin}{\string\arcsin}
  \renewcommand{\arccos}{\string\arccos}
  \renewcommand{\arctan}{\string\arctan}
  \renewcommand{\infty}{\string\infty}
  \renewcommand{\Gamma}{\string\Gamma}
  \renewcommand{\Delta}{\string\Delta}
  \renewcommand{\Lambda}{\string\Lambda}
  \renewcommand{\Phi}{\string\Phi}
  \renewcommand{\Pi}{\string\Pi}
  \renewcommand{\Psi}{\string\Psi}
  \renewcommand{\Sigma}{\string\Sigma}
  \renewcommand{\Theta}{\string\Theta}
  \renewcommand{\Upsilon}{\string\Upsilon}
  \renewcommand{\Xi}{\string\Xi}
  \renewcommand{\Omega}{\string\Omega}
  \renewcommand{\alpha}{\string\alpha}
  \renewcommand{\beta}{\string\beta}
  \renewcommand{\gamma}{\string\gamma}
  \renewcommand{\delta}{\string\delta}
  \renewcommand{\epsilon}{\string\epsilon}
  \renewcommand{\zeta}{\string\zeta}
  \renewcommand{\eta}{\string\eta}
  \renewcommand{\theta}{\string\theta}
  \renewcommand{\iota}{\string\iota}
  \renewcommand{\kappa}{\string\kappa}
  \renewcommand{\lambda}{\string\lambda}
  \renewcommand{\mu}{\string\mu}
  \renewcommand{\nu}{\string\nu}
  \renewcommand{\xi}{\string\xi}
  \renewcommand{\pi}{\string\pi}
  \renewcommand{\rho}{\string\rho}
  \renewcommand{\sigma}{\string\sigma}
  \renewcommand{\tau}{\string\tau}
  \renewcommand{\upsilon}{\string\upsilon}
  \renewcommand{\phi}{\string\phi}
  \renewcommand{\chi}{\string\chi}
  \renewcommand{\psi}{\string\psi}
  \renewcommand{\omega}{\string\omega}
  \renewcommand{\digamma}{\string\digamma}
  \renewcommand{\varepsilon}{\string\epsilon}
  \renewcommand{\varkappa}{\string\kappa}
  \renewcommand{\varphi}{\string\phi}
  \renewcommand{\varpi}{\string\pi}
  \renewcommand{\varrho}{\string\rho}
  \renewcommand{\varsigma}{\string\sigma}
  \renewcommand{\vartheta}{\string\theta}
  %[#2]
  \rule[-0.5em]{1in}{2.5em}
  \endgroup
}
\else
\newcommand{\answer}[2][]{%
	\ifmmode%
		\setkeys{answer}{#1}%
		\ifthenelse{\boolean{\ans@given}}
			{% Start then statement
			\ifhandout 
				#2
			\else
				\underset{\scriptstyle\mathrm{given}}{\fbox{\ensuremath{#2}}}
			\fi
			}% End then statement
			{% Start else statement
			\ifhandout
				\fbox{\rm{?}}
			\else% show answer in box outside handout mode
				\fbox{\ensuremath{#2}}
			\fi
			}% End else statement
	\else%
		\GenericError{\space\space\space\space}% Throw an error based on... something? -- Jason
		{Attempt to use \@backslashchar answer outside of math mode}
		{See https://github.com/ximeraProject/ximeraLatex for explanation.}
		{Need to use either inline or display math.}%
	\fi
      }
\fi
%</classXimera>
%    \end{macrocode}
